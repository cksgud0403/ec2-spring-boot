name: CD Pipeline

on:
  pull_request:
    branches:
      - main
    types: [closed] # PR이 Closed 될 때 이벤트 발생
env:
  EC2_HOST: ${{ secrets.EC2_HOST }} # EC2 호스트 주소
  EC2_USER: ${{ secrets.EC2_USER }} # EC2 사용자 이름
  EC2_KEY: ${{ secrets.EC2_KEY }} # EC2 SSH 키
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }} # DockerHub 저장소 이름
jobs:
  doploy:
    if: github.event.pull_request.merged == true # PR이 Merge 된 경우에만 실행
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build \
          -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }} .
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:latest
#      - name: Deploy to EC2 via SSH
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ env.EC2_HOST }}
#          username: ${{ env.EC2_USER }}
#          key: ${{ env.EC2_KEY }}
#          script: |
#            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:latest
#            docker stop $(docker ps -q)
#            docker rm $(docker ps -q)
#            docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:latest
#            docker image rm ${docker images -q}